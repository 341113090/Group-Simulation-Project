#BlueJ class context
comment0.target=SuperDisplayLabel
comment0.text=\n\ <p>A\ useful\ label\ to\ display\ game\ score,\ stats,\ or\ other\ texts.</p>\n\ \n\ <p>This\ is\ effectively\ a\ one-line\ text\ box\ that\ should\ span\ the\ width\ of\ the\ whole\ world\ (although\n\ the\ width\ can\ be\ changed\ if\ desired).\ It\ includes\ methods\ for\ managing\ and\ updating\ scores.</p>\ \n\ \n\ @author\ Jordan\ Cohen\n\ @since\ November\ 2015\ (formerly\ ScoreBar)\n\ @version\ 1.1\ (Nov\ 2021)\n
comment1.params=backColor\ foreColor\ font\ width
comment1.target=SuperDisplayLabel(greenfoot.Color,\ greenfoot.Color,\ greenfoot.Font,\ int)
comment2.params=width\ font
comment2.target=SuperDisplayLabel(int,\ greenfoot.Font)
comment3.params=labels\ newValues
comment3.target=void\ update(java.lang.String[],\ int[])
comment3.text=\n\ Method\ to\ update\ the\ value\ shown\ on\ the\ score\ board\n\ \n
comment4.params=newValues
comment4.target=void\ update(int[])
comment4.text=\n\ Method\ to\ update\ the\ value\ shown\ on\ the\ TextBox\n\ \n\ \n
comment5.params=output\ recenter
comment5.target=void\ update(java.lang.String,\ boolean)
comment5.text=\n\ Takes\ a\ String\ and\ displays\ it\ centered\ to\ the\ screen.\ Note\ this\ gets\ called\ bu\ the\ other\n\ update()\ method.\n\ \n\ @param\ \ \ output\ \ A\ string\ to\ be\ output,\ centered\ on\ the\ screen.\n\ @param\ \ \ recenter\ \ \ \ if\ true,\ this\ will\ recalculate\ and\ center\ the\ text.\ Use\ this\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ sparingly,\ as\ the\ recalculation\ is\ fairly\ demanding\ on\ the\ CPU.\n
comment6.params=canvas\ text\ middleX\ bottomY
comment6.target=void\ drawCenteredText(greenfoot.GreenfootImage,\ java.lang.String,\ int,\ int)
comment6.text=\n\ <h3>Finally,\ draw\ centered\ text\ in\ Greenfoot\!</h3>\n\ <p>\n\ <b>IMPORTANT\:</b>\ Set\ your\ Font\ in\ your\ GreenfootImage\ before\ you\ send\ it\ here.\n\ </p>\n\ <p>Use\ this\ instead\ of\ Greenfoot.drawString\ to\ center\ your\ text,\ or\ just\ call\ getStringWidth\n\ \ \ \ directly\ and\ draw\ it\ yourself\ if\ you\ prefer\ the\ control\ over\ the\ ease\ of\ use.</p>\n\ \n\ @param\ canvas\ \ \ \ The\ GreenfootImage\ that\ you\ want\ to\ draw\ onto,\ often\ the\ background\ of\ a\ World,\ but\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ could\ also\ be\ an\ Actor's\ image\ or\ any\ other\ image.\n\ @param\ text\ \ \ \ \ \ The\ text\ to\ be\ drawn.\n\ @param\ middleX\ \ \ the\ x\ Coordinate\ that\ the\ text\ should\ be\ centered\ on\n\ @param\ bottomY\ \ \ the\ y\ Coordinate\ at\ the\ baseline\ of\ the\ text\ (similar\ to\ GreenfootImage.drawString)\n\ \n\ @since\ June\ 2021\n
comment7.params=canvas\ text\ bottomY
comment7.target=void\ drawCenteredText(greenfoot.GreenfootImage,\ java.lang.String,\ int)
comment7.text=\n\ <p>\n\ <b>IMPORTANT\:</b>\ Set\ your\ Font\ in\ your\ GreenfootImage\ before\ you\ send\ it\ here.\n\ </p>\n\ <p>Similar\ to\ the\ method\ above,\ except\ it\ always\ centers\ the\ text\ on\ the\ whole\ image\n\ \ \ \ instead\ of\ a\ specified\ x\ position.\ UNTESTED\!</p>\n\ \n\ @param\ canvas\ \ \ \ The\ GreenfootImage\ that\ you\ want\ to\ draw\ onto,\ often\ the\ background\ of\ a\ World,\ but\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ could\ also\ be\ an\ Actor's\ image\ or\ any\ other\ image.\n\ @param\ text\ \ \ \ \ \ The\ text\ to\ be\ drawn.\n\ @param\ bottomY\ \ \ the\ y\ Coordinate\ at\ the\ baseline\ of\ the\ text\ (similar\ to\ GreenfootImage.drawString)\n\ \n\ @since\ June\ 2021\n
comment8.params=font\ text
comment8.target=int\ getStringWidth(greenfoot.Font,\ java.lang.String)
comment8.text=\n\ <h3>Mr.\ Cohen's\ Text\ Centering\ Algorithm</h3>\n\ \n\ <p>Get\ the\ Width\ of\ a\ String,\ if\ it\ was\ printed\ out\ using\ the\ drawString\ command\ in\ a\ particular\n\ Font.</p>\n\ <p>There\ is\ a\ performance\ cost\ to\ this,\ although\ it\ is\ more\ significant\ on\ the\ Gallery,\ and\ \n\ especially\ on\ the\ Gallery\ when\ browsed\ on\ a\ mobile\ device.\ It\ is\ appropriate\ to\ call\ this\ in\ the\ \n\ constructor,\ and\ in\ most\ cases\ it\ is\ ideal\ NOT\ to\ call\ it\ from\ an\ act\ method,\ especially\n\ every\ act.</p>\n\ \n\ <p>In\ cases\ where\ values\ are\ pre-determined,\ it\ may\ be\ ideal\ to\ cache\ the\ values\ (save\ them)\ so\ \n\ you\ don't\ have\ to\ run\ this\ repeatedly\ on\ the\ same\ text.\ If\ you\ do\ this\ in\ the\ World\ constructor,\n\ there\ is\ no\ performance\ cost\ while\ running.</p>\n\ \n\ <h3>Performance\ &\ Compatibility\:</h3>\n\ <ul>\n\ \ <li>\ Locally,\ performance\ should\ be\ sufficient\ on\ any\ moderate\ computer\ (average\ call\ 0.1-0.2ms\ on\ my\ laptop)</li>\n\ \ <li>\ To\ be\ compatible\ with\ Greenfoot\ Gallery,\ removed\ use\ of\ getAwtImage()\ and\ replaced\ with\ getColorAt()\ on\ a\ GreenfootImage</li>\n\ \ <li>\ On\ Gallery,\ performance\ is\ about\ 10x\ slower\ than\ locally\ (4ms\ on\ Gallery\ via\ Computer).\ For\ reference,\ an\ act()\ should\ be\n\ \ \ \ \ \ \ less\ than\ 16.6ms\ to\ maintain\ 60\ frames/acts\ per\ second.\ </li>\n\ \ <li>\ HUGE\ performance\ drop\ on\ Gallery\ via\ Mobile\ devices\ -\ not\ sure\ why,\ going\ to\ ignore\ for\ now.\ (Average\ update\ duration\ 34ms,\ more\n\ \ \ \ \ \ \ than\ 2\ optimal\ acts)</li>\n\ </ul>\n\ \n\ @param\ font\ the\ GreenFoot.Font\ which\ is\ being\ used\ to\ draw\ text\n\ @param\ text\ the\ actual\ text\ to\ be\ drawn\n\ @return\ int\ \ the\ width\ of\ the\ String\ text\ as\ draw\ in\ Font\ font,\ in\ pixels.\n\ \n\ @since\ June\ 2021\n\ @version\ December\ 2021\ -\ Even\ more\ Efficiency\ Improvement\ -\ sub\ 0.06ms\ per\ update\ on\ setSpeed(100)\!\n
numComments=9
